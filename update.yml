---
- hosts: all:!build
  gather_facts: false
  become: true
  become_user: root
  tasks:
  - raw: apt-get install python -y
    ignore_errors: true

- hosts: all:!build
  become: true
  become_user: root
  tasks:
  - name: add ssh public key
    authorized_key: user=root key="{{ lookup('file', 'files/id_rsa.pub') }}" state=present
  - name: update ssh keys from git
    authorized_key: user=root key=https://github.com/{{item}}.keys
    with_items: ['rstarmer','bshetti','johnstarmer','cdm-kumulus']
  pre_tasks:
  - name: include variables
    include_vars: vars/global.yml
  - name: install system specific packages
    include: debian.yml
    when: ansible_os_family == "Debian"
  - name: install RedHat specific packages
    include: redhat.yml
    when: ansible_os_family == "RedHat"
  - name: install docker from upstream
    shell: curl -sSL https://get.docker.io | bash creates=/etc/docker/key.json
  - name: create systemd docker service directory
    file: dest=/etc/systemd/system/docker.service.d state=directory
  - name: create docker service conf file
    copy: src=files/kolla.conf dest=/etc/systemd/system/docker.service.d/kolla.conf
  - name: restart daemons
    command: systemctl daemon-reload
  - name: restart docker service
    service: name=docker state=restarted

  - name: ensure docker is running
    service: name=docker state=started enabled=true
  - name: Install pip based docker-py module
    pip: name=docker-py
  - name: install bridge utilities
    apt: name=bridge-utils  state=installed
    when: ansible_os_family == "Debian"

  - name: check for vxlan interface
    command: ip -d link
    register: vxlan_info
    ignore_errors: true
  - name: create vxlan0 interface
    command: ip link add vxlan0 type vxlan id 42 group 239.1.1.1 dev ens3 dstport 4789
    when: not (vxlan_info.stdout | search('vxlan0'))
  - name: create vxlan1 interface
    command: ip link add vxlan1 type vxlan id 43 group 239.1.1.2 dev ens3 dstport 4789
    when: not (vxlan_info.stdout | search('vxlan1'))
  - name: add ip addr to vxlan0
    command: "ip addr add {{net_0|ipaddr('net')|ipaddr(index)}} dev vxlan0"
    when: not (vxlan_info.stdout | search('vxlan0'))
  - name: add ip addr to vxlan1
    command: "ip addr add {{net_1|ipaddr('net')|ipaddr(index)}} dev vxlan1"
    when: not (vxlan_info.stdout | search('vxlan1'))
  - name: bring up links
    command: ip link set "{{item}}" up
    with_items:
       - vxlan0
       - vxlan1
## Ensure DNS is configured
  - name: update resolv.conf with domain
    lineinfile: dest=/etc/resolv.conf backrefs=yes regexp=^search(.*) line='search \1 {{domain}}'
